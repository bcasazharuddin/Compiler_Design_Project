Grammar

    0 $accept: start $end

    1 start: expr1 NewLine

    2 expr1: '[' expr ']'
    3      | List '(' expr ')'

    4 expr: '(' expr ')' expr
    5     | expr ',' expr
    6     | Num
    7     | Id
    8     | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4
')' (41) 3 4
',' (44) 5
'[' (91) 2
']' (93) 2
error (256)
Num (258) 6
Id (259) 7
NewLine (260) 1
List (261) 3


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
start (13)
    on left: 1, on right: 0
expr1 (14)
    on left: 2 3, on right: 1
expr (15)
    on left: 4 5 6 7 8, on right: 2 3 4 5


state 0

    0 $accept: . start $end

    List  shift, and go to state 1
    '['   shift, and go to state 2

    start  go to state 3
    expr1  go to state 4


state 1

    3 expr1: List . '(' expr ')'

    '('  shift, and go to state 5


state 2

    2 expr1: '[' . expr ']'

    Num  shift, and go to state 6
    Id   shift, and go to state 7
    '('  shift, and go to state 8

    $default  reduce using rule 8 (expr)

    expr  go to state 9


state 3

    0 $accept: start . $end

    $end  shift, and go to state 10


state 4

    1 start: expr1 . NewLine

    NewLine  shift, and go to state 11


state 5

    3 expr1: List '(' . expr ')'

    Num  shift, and go to state 6
    Id   shift, and go to state 7
    '('  shift, and go to state 8

    $default  reduce using rule 8 (expr)

    expr  go to state 12


state 6

    6 expr: Num .

    $default  reduce using rule 6 (expr)


state 7

    7 expr: Id .

    $default  reduce using rule 7 (expr)


state 8

    4 expr: '(' . expr ')' expr

    Num  shift, and go to state 6
    Id   shift, and go to state 7
    '('  shift, and go to state 8

    $default  reduce using rule 8 (expr)

    expr  go to state 13


state 9

    2 expr1: '[' expr . ']'
    5 expr: expr . ',' expr

    ','  shift, and go to state 14
    ']'  shift, and go to state 15


state 10

    0 $accept: start $end .

    $default  accept


state 11

    1 start: expr1 NewLine .

    $default  reduce using rule 1 (start)


state 12

    3 expr1: List '(' expr . ')'
    5 expr: expr . ',' expr

    ','  shift, and go to state 14
    ')'  shift, and go to state 16


state 13

    4 expr: '(' expr . ')' expr
    5     | expr . ',' expr

    ','  shift, and go to state 14
    ')'  shift, and go to state 17


state 14

    5 expr: expr ',' . expr

    Num  shift, and go to state 6
    Id   shift, and go to state 7
    '('  shift, and go to state 8

    $default  reduce using rule 8 (expr)

    expr  go to state 18


state 15

    2 expr1: '[' expr ']' .

    $default  reduce using rule 2 (expr1)


state 16

    3 expr1: List '(' expr ')' .

    $default  reduce using rule 3 (expr1)


state 17

    4 expr: '(' expr ')' . expr

    Num  shift, and go to state 6
    Id   shift, and go to state 7
    '('  shift, and go to state 8

    $default  reduce using rule 8 (expr)

    expr  go to state 19


state 18

    5 expr: expr . ',' expr
    5     | expr ',' expr .

    $default  reduce using rule 5 (expr)


state 19

    4 expr: '(' expr ')' expr .
    5     | expr . ',' expr

    $default  reduce using rule 4 (expr)
